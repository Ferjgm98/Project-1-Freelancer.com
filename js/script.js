class TabSystem{constructor(tabIndex,tabContent){this.tabIndex=tabIndex;this.tabContent=tabContent
    this.init()}
    init(){const tabsArray=Array.from(document.querySelectorAll(this.tabIndex));const arrayContent=Array.from(document.querySelectorAll(this.tabContent));tabsArray.forEach(tab=>{tab.addEventListener('click',e=>{const classesSplit=e.target.attributes.class.nodeValue.split(' ');const tabNumber=classesSplit[1].split('-')[2];arrayContent.forEach(content=>{content.classList.remove('active')});tabsArray.forEach(indexTab=>{indexTab.classList.remove('active')})
    if(document.querySelector(`${this.tabContent}-${tabNumber}`)){e.target.classList.add('active');document.querySelector(`${this.tabContent}-${tabNumber}`).classList.add('active')}else{console.log(`error`)}})})}}
    const tabsOpcion2=new TabSystem('.tab-item','.tab-item-content');const tabForm=new TabSystem('.tab-form','.tab-form-content');function validateFields(input){if(input.value!==''){return!0}else{return!1}}
    if(document.querySelectorAll('.validate')){Array.from(document.querySelectorAll('.validate')).forEach(input=>{input.addEventListener('focusout',e=>{const isValid=validateFields(e.target);const element=e.target.parentNode.closest('.input-container').nextElementSibling.firstElementChild;if(isValid===!0){element.style.display='none'}else{element.style.display='block'}})})}
    if(document.querySelector('.form-tab')){document.querySelector('.form-tab').addEventListener('submit',e=>{e.preventDefault();let count=0;const inputValid=Array.from(document.querySelectorAll('.validate'));inputValid.forEach(input=>{if(validateFields(input)){count++}});if(count===inputValid.length){console.log('good');return!0}else{console.log('bad');return!1}})}